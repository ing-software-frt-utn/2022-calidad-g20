// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(DatosContexto))]
    [Migration("20230303143940_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Entidades.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaDisparo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReinicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JornadaLaboralId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JornadaLaboralId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("Dominio.Entidades.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("Dominio.Entidades.Defecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeDefecto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Defectos");
                });

            modelBuilder.Entity("Dominio.Entidades.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Dominio.Entidades.Incidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DefectoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaYHoraDeRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoraDeRegistro")
                        .HasColumnType("int");

                    b.Property<int?>("JornadaLaboralId")
                        .HasColumnType("int");

                    b.Property<int>("Pie")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DefectoId");

                    b.HasIndex("JornadaLaboralId");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Dominio.Entidades.JornadaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaYHoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaYHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrdenDeProduccionId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorDeCalidadId")
                        .HasColumnType("int");

                    b.Property<int?>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenDeProduccionId");

                    b.HasIndex("SupervisorDeCalidadId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Jornadas");
                });

            modelBuilder.Entity("Dominio.Entidades.LineaDeProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LineasDeTrabajo");
                });

            modelBuilder.Entity("Dominio.Entidades.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LimiteInferiorObservado")
                        .HasColumnType("int");

                    b.Property<int>("LimiteInferiorReproceso")
                        .HasColumnType("int");

                    b.Property<int>("LimiteSuperiorObservado")
                        .HasColumnType("int");

                    b.Property<int>("LimiteSuperiorReproceso")
                        .HasColumnType("int");

                    b.Property<int>("SKU")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Dominio.Entidades.OrdenDeProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaYHoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaYHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LineaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorDeLineaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("LineaId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("SupervisorDeLineaId");

                    b.ToTable("OrdenesDeProduccion");
                });

            modelBuilder.Entity("Dominio.Entidades.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HoraFin")
                        .HasColumnType("float");

                    b.Property<double>("HoraInicio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Dominio.Entidades.Alerta", b =>
                {
                    b.HasOne("Dominio.Entidades.JornadaLaboral", null)
                        .WithMany("Alertas")
                        .HasForeignKey("JornadaLaboralId");
                });

            modelBuilder.Entity("Dominio.Entidades.Incidencia", b =>
                {
                    b.HasOne("Dominio.Entidades.Defecto", "Defecto")
                        .WithMany()
                        .HasForeignKey("DefectoId");

                    b.HasOne("Dominio.Entidades.JornadaLaboral", null)
                        .WithMany("Incidencias")
                        .HasForeignKey("JornadaLaboralId");

                    b.Navigation("Defecto");
                });

            modelBuilder.Entity("Dominio.Entidades.JornadaLaboral", b =>
                {
                    b.HasOne("Dominio.Entidades.OrdenDeProduccion", null)
                        .WithMany("Jornadas")
                        .HasForeignKey("OrdenDeProduccionId");

                    b.HasOne("Dominio.Entidades.Empleado", "SupervisorDeCalidad")
                        .WithMany()
                        .HasForeignKey("SupervisorDeCalidadId");

                    b.HasOne("Dominio.Entidades.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoId");

                    b.Navigation("SupervisorDeCalidad");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Dominio.Entidades.OrdenDeProduccion", b =>
                {
                    b.HasOne("Dominio.Entidades.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Dominio.Entidades.LineaDeProduccion", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("Dominio.Entidades.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId");

                    b.HasOne("Dominio.Entidades.Empleado", "SupervisorDeLinea")
                        .WithMany()
                        .HasForeignKey("SupervisorDeLineaId");

                    b.Navigation("Color");

                    b.Navigation("Linea");

                    b.Navigation("Modelo");

                    b.Navigation("SupervisorDeLinea");
                });

            modelBuilder.Entity("Dominio.Entidades.JornadaLaboral", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Dominio.Entidades.OrdenDeProduccion", b =>
                {
                    b.Navigation("Jornadas");
                });
#pragma warning restore 612, 618
        }
    }
}
